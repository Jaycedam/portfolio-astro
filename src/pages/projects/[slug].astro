---
import { Image } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import { badgeVariants } from "@/components/ui/badge";
import { MoveLeft } from "lucide-react";

export async function getStaticPaths() {
  const mdx = await getCollection("projects");
  const paths = mdx.map((item) => ({
    params: { slug: item.slug },
    props: item,
  }));

  return paths;
}
type Props = CollectionEntry<"projects">;

const mdx = Astro.props;
const { Content } = await mdx.render();
---

<Layout title={mdx.data.title}>
  <section class="container space-y-8">
    <a
      class="inline-flex gap-2 text-muted-foreground hover:text-foreground transition-colors"
      href="/projects"
    >
      <MoveLeft />
      {" "}
      All projects
    </a>

    <div class="max-w-6xl mx-auto space-y-8">
      <div class="space-y-4">
        <h1 class="title">
          {mdx.data.title}: {mdx.data.description}
        </h1>

        <p class="subheading">
          {
            mdx.data.date.toLocaleDateString("en-us", {
              year: "numeric",
              month: "short",
            })
          }
        </p>
      </div>

      <Image
        src={mdx.data.image}
        alt=""
        class="object-cover aspect-video w-full rounded-3xl"
        transition:name={mdx.slug}
        format="avif"
        loading="eager"
        widths={[360, 720, 1000, mdx.data.image.width]}
        sizes={`(max-width: 360px) 360px, (max-width: 720px) 720px, (max-width: 1600px) 1000px, ${mdx.data.image.width}px`}
      />
    </div>

    <article
      class="prose prose-h2:heading prose-zinc mx-auto dark:prose-invert"
    >
      <Content />
    </article>
  </section>

  <section class="container">
    <ul class="flex flex-wrap gap-2 max-w-prose mx-auto">
      <li>
        <p class="font-bold">Tags:</p>
      </li>

      {
        mdx.data.tags.map((tag) => (
          <li>
            <a
              href={`/projects/tags/${tag}`}
              class={badgeVariants({ variant: "secondary" })}
            >
              {tag}
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>
