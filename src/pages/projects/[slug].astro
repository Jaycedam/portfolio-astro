---
import { Image } from "astro:assets";
import Layout from "@layouts/Layout.astro";
import { type CollectionEntry, getCollection } from "astro:content";
import { MoveLeft } from "lucide-react";
import { buttonVariants } from "@/components/ui/button";

export async function getStaticPaths() {
  const mdx = await getCollection("projects");
  const paths = mdx.map((item) => ({
    params: { slug: item.slug },
    props: item,
  }));

  return paths;
}
type Props = CollectionEntry<"projects">;

const mdx = Astro.props;
const { Content } = await mdx.render();
---

<Layout title={mdx.data.title}>
  <section class="container space-y-16">
    <div class="max-w-prose mx-auto space-y-8">
      <div class="space-y-4">
        <div class="space-y-2">
          <p class="text-muted-foreground">{mdx.data.area}</p>
          <h1 class="title">
            {mdx.data.title}
          </h1>
        </div>

        <p class="subtitle">{mdx.data.description}</p>

        <p class="subheading">
          {
            mdx.data.date.toLocaleDateString("en-us", {
              year: "numeric",
              month: "short",
            })
          }
        </p>

        <a
          class="inline-flex gap-2 text-muted-foreground hover:text-foreground transition-colors"
          href="/projects"
        >
          <MoveLeft />
          {" "}
          Back to all projects
        </a>
      </div>
    </div>

    <Image
      src={mdx.data.image}
      alt=""
      class="object-cover aspect-video w-full rounded-3xl"
      transition:name={mdx.slug}
      format="avif"
      loading="eager"
      widths={[360, 720, 1000, mdx.data.image.width]}
      sizes={`(max-width: 360px) 360px, (max-width: 720px) 720px, (max-width: 1600px) 1000px, ${mdx.data.image.width}px`}
    />

    <article
      class="prose prose-h2:heading prose-zinc mx-auto dark:prose-invert"
    >
      <Content />
    </article>
  </section>

  <section class="container">
    <ul class="flex flex-wrap gap-2 max-w-prose mx-auto">
      {
        mdx.data.tags.map((tag) => (
          <li>
            <a
              href={`/projects/tags/${tag}`}
              class={buttonVariants({ variant: "secondary" })}
            >
              {tag}
            </a>
          </li>
        ))
      }
    </ul>
  </section>
</Layout>
