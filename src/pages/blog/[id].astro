---
import FormattedDate from "@/components/FormattedDate.astro";
import Layout from "@layouts/Layout.astro";
import { type CollectionEntry, getCollection, render } from "astro:content";
import "@fontsource-variable/jetbrains-mono"; // code font
import Link from "@/components/ui/Link.astro";
import Article from "@components/Article.astro";

export async function getStaticPaths() {
    const item = await getCollection("blog");
    const paths = item.map((item) => ({
        params: { id: item.id },
        props: item,
    }));

    return paths;
}
type Props = CollectionEntry<"blog">;

const item = Astro.props;
const { Content, headings } = await render(item);
---

<Layout title={item.data.title + " | JC Portfolio"}>
    <section class="space-y-20">
        <!--TODO: add breadcrumbs-->

        <!--image, title, desc and tags -->
        <div class="space-y-8">
            <!--<Image-->
            <!--    src={item.data.image}-->
            <!--    alt=""-->
            <!--    class="object-cover aspect-video w-full max-w-4xl mx-auto rounded-3xl"-->
            <!--    transition:name={item.id}-->
            <!--    loading="eager"-->
            <!--    format="avif"-->
            <!--    widths={[380, 720, 1000, 1500, item.data.image.width]}-->
            <!--    sizes={`-->
            <!--        (max-width: 380px) 380px, -->
            <!--        (max-width: 720px) 720px, -->
            <!--        (max-width: 1920px) 1000px, -->
            <!--        (max-width: 2560px) 1500px, -->
            <!--        ${item.data.image.width}px`}-->
            <!--/>-->

            <div class="mx-auto max-w-prose space-y-8">
                <div class="space-y-4 text-center">
                    <h1 class="title" transition:name={"blog-title-" + item.id}>
                        {item.data.title}
                    </h1>

                    <p
                        class="subtitle"
                        transition:name={"blog-desc-" + item.id}
                    >
                        {item.data.description}
                    </p>

                    <p transition:name={"blog-date-" + item.id}>
                        <FormattedDate date={item.data.date} includeDay />
                    </p>
                </div>

                <!--<div class="flex text-muted-foreground gap-4">-->
                <!--</div>-->
            </div>

            <ul class="mx-auto flex max-w-prose flex-wrap justify-center gap-2">
                {
                    item.data.tags.map((tag) => (
                        <li>
                            <Link
                                variant="secondary"
                                size="sm"
                                href={`/blog/tag/${tag}`}
                            >
                                {tag}
                            </Link>
                        </li>
                    ))
                }
            </ul>
        </div>

        <!--markdown content -->
        <Article headings={headings}>
            <Content />
        </Article>
    </section>
</Layout>
