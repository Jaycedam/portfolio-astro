---
import { getCollection } from "astro:content";
import { buttonVariants } from "@components/ui/button";
import { ChevronRight } from "lucide-react";
import FilterByTag from "@components/FilterByTag.astro";
import FormattedDate from "@components/FormattedDate.astro";
const { homepage, title, filter } = Astro.props;

type Props = { homepage: boolean; title: string; filter?: string };

let data = (await getCollection("blog")).sort(
  (a, b) => b.data.date.valueOf() - a.data.date.valueOf()
);

if (homepage) {
  data = data.slice(0, 2);
}

// filter by tags on the url params
if (filter) {
  data = data.filter(
    (item) =>
      item.data.tags && item.data.tags.some((tag) => filter.includes(tag))
  );
}
---

<section id="blog" class="container space-y-8">
  <h1 class={homepage ? "heading" : "title"}>
    {title}
    {filter && <span class="text-muted-foreground text-xl">{filter}</span>}
  </h1>
  {!homepage && <FilterByTag collection="blog" />}

  <ol class="md:grid-cols-2 grid gap-8">
    {
      data.map((mdx) => (
        <li transition:name={"blog-card-" + mdx.slug}>
          <div class="space-y-1">
            <a
              class="text-xl font-bold transition-all"
              href={`/blog/${mdx.slug}`}
              transition:name={"blog-title-" + mdx.slug}
            >
              {mdx.data.title}
            </a>

            <p
              class="text-muted-foreground"
              transition:name={"blog-desc-" + mdx.slug}
            >
              {mdx.data.description}
            </p>

            <div
              class="text-muted-foreground"
              transition:name={"blog-date-" + mdx.slug}
            >
              <FormattedDate date={mdx.data.date} includeDay />
            </div>
          </div>
        </li>
      ))
    }
  </ol>

  {
    homepage && (
      <div class="grid justify-end">
        <a href="/blog" class={buttonVariants({ variant: "outline" })}>
          All posts
          <ChevronRight className="h-4" />
        </a>
      </div>
    )
  }
</section>
