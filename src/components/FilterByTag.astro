---
import { getPostsTags } from "@/lib/blog-collection";
import { getProjectTags } from "@/lib/project-collection";
import type { Collection } from "@/lib/types";

type Props = {
  collection: Collection;
};
const { collection } = Astro.props;

const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g)?.pop();

let tags: {
  tag: string;
}[] = [];

if (collection === "projects") {
  tags = await getProjectTags();
} else if (collection === "blog") {
  tags = await getPostsTags();
}
---

<div class="flex items-center">
  <ul class="flex gap-4 md:gap-2 items-center flex-wrap">
    <li>
      <a
        class={`h-9 text-sm border rounded-3xl px-4 py-2 relative
          ${collection === subpath && "text-primary-foreground"}`}
        href={`/${collection}`}
      >
        All
        {
          collection === subpath && (
            // TODO: fix z-index issue on transition
            // If the current path match the name of the tag, then render the link bg
            <div
              class="absolute rounded-3xl inset-0 bg-primary -z-10"
              transition:name="filter-btn"
            />
          )
        }
      </a>
    </li>

    {
      tags.map((tag) => (
        <li>
          <a
            class={`
              h-9 text-sm border rounded-3xl px-4 py-2 relative
              ${tag.tag === subpath && "text-primary-foreground"}
            `}
            href={`/${collection}/tag/${tag.tag}`}
          >
            {tag.tag}

            {tag.tag === subpath && (
              // TODO: fix z-index issue on transition
              // If the current path match the name of the tag, then render the link bg
              <div
                class="absolute rounded-3xl inset-0 bg-primary -z-10"
                transition:name="filter-btn"
              />
            )}
          </a>
        </li>
      ))
    }
  </ul>
</div>
