---
import { getPostsTags } from "@lib/blog-collection";
import { getProjectTags } from "@lib/project-collection";
import Link from "@ui/Link.astro";
import type { CollectionKey } from "astro:content";

type Props = {
    collection: CollectionKey;
};

const { collection } = Astro.props;
const { pathname } = Astro.url;
const subpath = pathname.match(/[^\/]+/g)?.pop();

let tags: {
    tag: string;
}[] = [];

if (collection === "projects") {
    tags = await getProjectTags();
} else if (collection === "blog") {
    tags = await getPostsTags();
}
---

<div class="flex items-center">
    <ul class="flex flex-wrap items-center gap-4 md:gap-2">
        <li>
            <Link
                variant="ghost"
                class={`relative ${collection === subpath && "text-primary-foreground"} `}
                href={`/${collection}`}
            >
                All
                {
                    collection === subpath && (
                        // If the current path match the name of the tag, then render the link bg
                        <div
                            class="absolute inset-0 -z-10 rounded-3xl bg-primary"
                            transition:name="filter-btn"
                        />
                    )
                }
            </Link>
        </li>

        {
            tags.map((tag) => (
                <li>
                    <Link
                        variant="ghost"
                        class={`relative ${tag.tag === subpath && "text-primary-foreground"} `}
                        href={`/${collection}/tag/${tag.tag}`}
                    >
                        {tag.tag}

                        {tag.tag === subpath && (
                            // If the current path match the name of the tag, then render the link bg
                            <div
                                class="absolute inset-0 -z-10 rounded-3xl bg-primary"
                                transition:name="filter-btn"
                            />
                        )}
                    </Link>
                </li>
            ))
        }
    </ul>
</div>
