---
import { Image } from "astro:assets";
import { getCollection } from "astro:content";
import { buttonVariants } from "./ui/button";
import { ChevronRight } from "lucide-react";

const { homepage, title } = Astro.props;

type Props = { homepage: boolean; title: string };

const projects = (
  await getCollection("projects", ({ data }) => {
    // if the featured prop is true, then filter the collection
    if (homepage) {
      return data.featured === true;
    }
    // else just return the full collection
    return true;
  })
).sort((a, b) => b.data.date.valueOf() - a.data.date.valueOf());
---

<section id="projects" class="container space-y-8">
  <h1 class={homepage ? "heading" : "title"} transition:name="projects-title">
    {title}
  </h1>
  <ul class={`${homepage ? "md:grid-cols-2" : "md:grid-cols-3"} grid gap-4 `}>
    {
      projects.map((item) => (
        <li class="w-full relative aspect-square overflow-hidden rounded-3xl group">
          <a href={`projects/${item.slug}`}>
            <h2
              class="font-bold absolute bottom-4 right-4 z-10 px-4 py-2 bg-background/50 backdrop-blur rounded-3xl"
              transition:name={"title-" + item.data.title}
            >
              {item.data.title} - {item.data.area}
            </h2>
            <Image
              src={item.data.image}
              alt=""
              class="object-cover rounded-3xl h-full w-full group-hover:scale-110 transition-all duration-500"
              transition:name={item.slug}
              format="avif"
            />
          </a>
        </li>
      ))
    }
  </ul>

  {
    homepage && (
      <div class="grid justify-end">
        <a href="/projects" class={buttonVariants({ variant: "outline" })}>
          All projects
          <ChevronRight className="h-4" />
        </a>
      </div>
    )
  }
</section>
